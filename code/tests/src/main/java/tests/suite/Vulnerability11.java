package tests.suite;

import net.sourceforge.jwebunit.junit.WebTester;
import org.junit.After;
import org.junit.Before;
import org.junit.Test;
import tests.utilities.Helper;

/**
 * Proof of concept for the XSS vulnerability #11.
 * The vulnerable print involves the following line of the template:
 * <input type='hidden' name='selectclass' value='$_POST[selectclass]' />
 *
 * @author Davide Pedranz
 */
public final class Vulnerability11 {

    private WebTester tester;
    private Helper helper;

    @Before
    public void prepare() {
        tester = new WebTester();
        tester.setBaseUrl(Helper.BASE_URL);
        helper = new Helper(tester);
    }

    @Test
    public void test() {

        // login
        helper.login("teacher", "teacher");

        // move to the page to set a new assignment (vulnerable form)
        tester.clickLinkWithText("course");
        tester.assertMatch("Class Settings");
        tester.clickLinkWithText("Assignments");
        tester.assertMatch("Manage Assignments");

        // substitute the hidden form field with a tampered value (attack)
        tester.getElementByXPath("html//form[@name='assignments']//input[@name='selectclass']")
                .setAttribute("value", "99999999' /> <script>alert('xss done')</script> <input type='hidden' name='xss' value='1");

        // submit the tampered form
        tester.clickButtonWithText("Add");
        tester.assertMatch("Add New Assignment");

        // xss
        tester.assertNoMatch("<script>alert('xss done')</script>");
    }

    @After
    public void cleanup() {
        // no-op, nothing to cleanup
    }
}
