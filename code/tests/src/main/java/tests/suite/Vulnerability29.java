package tests.suite;

import net.sourceforge.jwebunit.junit.WebTester;
import org.junit.After;
import org.junit.Before;
import org.junit.Test;
import tests.utilities.Helper;

import java.io.IOException;

import static org.junit.Assert.assertFalse;

/**
 * Proof of concept for the XSS vulnerability #29.
 * This is a stored XSS vulnerability, exploiting the absence of
 * any sanitisation on the insert of a new semester.
 *
 * @author Davide Pedranz
 */
public final class Vulnerability29 {

    private WebTester tester;
    private Helper helper;

    @Before
    public void prepare() {
        tester = new WebTester();
        tester.setBaseUrl(Helper.BASE_URL);
        helper = new Helper(tester);
    }

    @Test
    public void test() {

        // edit the semester (vulnerable form)
        helper.loginAsAdmin();
        tester.clickLinkWithText("Semesters");
        tester.assertMatch("Manage Semesters");
        tester.setWorkingForm("semesters");
        tester.checkCheckbox("delete[]");
        tester.clickButtonWithText("Edit");
        tester.setWorkingForm("editsemester");
        tester.setTextField("title", "<h1>XSS</h1>");   // xss string, max 15 characters!
        tester.clickButtonWithText("Edit Semester");

        // now there should be the injected HTML
        helper.loginAsStudent();
        assertFalse(tester.getPageSource().contains("<h1>XSS</h1>"));
    }

    @After
    public void cleanup() throws IOException {

        // login as admin
        helper.loginAsAdmin();

        // edit the semester (vulnerable form)
        tester.clickLinkWithText("Semesters");
        tester.assertMatch("Manage Semesters");
        tester.setWorkingForm("semesters");
        tester.checkCheckbox("delete[]");
        tester.clickButtonWithText("Edit");
        tester.setWorkingForm("editsemester");
        tester.setTextField("title", "semester");
        tester.clickButtonWithText("Edit Semester");
    }
}
