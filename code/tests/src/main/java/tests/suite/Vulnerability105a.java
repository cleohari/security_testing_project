package tests.suite;

import okhttp3.*;
import org.aeonbits.owner.ConfigFactory;
import org.junit.After;
import org.junit.Before;
import org.junit.Test;
import tests.utilities.Environment;

import java.io.IOException;

import static org.junit.Assert.assertEquals;
import static org.junit.Assert.assertFalse;

/**
 * Proof of concept for the XSS vulnerability #105a.
 *
 * @author Davide Pedranz
 */
public final class Vulnerability105a {

    // dependencies
    private Environment environment;
    private OkHttpClient client;

    @Before
    public void prepare() {
        environment = ConfigFactory.create(Environment.class, System.getenv());
        client = new OkHttpClient();
    }

    @Test
    public void test() throws IOException {
        final RequestBody formBody = new FormBody.Builder()
                .add("page", "0 '> <script>alert('xss')</script> <span id='xss")
                .build();
        final Request request = new Request.Builder()
                .url(environment.baseURL() + "index.php")
                .post(formBody)
                .build();
        final Response response = client.newCall(request).execute();
        final String body = response.body().string();
        assertEquals(200, response.code());
        assertFalse(body.contains("<script>alert('xss')</script>"));
    }

    @After
    public void cleanup() {
        // no-op, nothing to cleanup
    }
}
