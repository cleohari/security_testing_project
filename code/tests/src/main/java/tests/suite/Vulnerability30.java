package tests.suite;

import net.sourceforge.jwebunit.junit.WebTester;
import org.aeonbits.owner.ConfigFactory;
import org.junit.After;
import org.junit.Before;
import org.junit.Test;
import tests.utilities.Environment;
import tests.utilities.Helper;

import java.io.IOException;

import static org.junit.Assert.assertFalse;

/**
 * Proof of concept for the XSS vulnerability #30.
 * This is a stored XSS vulnerability, exploiting the absence of
 * any sanitisation on the insert / update of a course.
 *
 * @author Davide Pedranz
 */
public final class Vulnerability30 {

    // dependencies
    private WebTester tester;
    private Helper helper;

    @Before
    public void prepare() {
        final Environment environment = ConfigFactory.create(Environment.class, System.getenv());
        tester = new WebTester();
        tester.setBaseUrl(environment.baseURL());
        helper = new Helper(environment, tester);
    }

    @Test
    public void test() {

        // this is a stored XSS vulnerability... login as admin
        helper.loginAsAdmin();

        // move to the page to edit the course
        tester.clickLinkWithText("Classes");
        tester.assertMatch("Manage Classes");
        tester.setWorkingForm("classes");
        tester.checkCheckbox("delete[]");
        tester.clickButtonWithText("Edit");

        // edit the course (vulnerable form)
        tester.setWorkingForm("editclass");
        tester.setTextField("title", "<h1>XSS</h1>");   // xss string, max 15 characters!
        tester.clickButtonWithText("Edit Class");

        // check if the XSS was successful, on the student home page
        helper.loginAsStudent();
        assertFalse(tester.getPageSource().contains("<h1>XSS</h1>"));
    }

    @After
    public void cleanup() throws IOException {

        // login as admin
        helper.loginAsAdmin();

        // move to the page to edit the course
        tester.clickLinkWithText("Classes");
        tester.assertMatch("Manage Classes");
        tester.setWorkingForm("classes");
        tester.checkCheckbox("delete[]");
        tester.clickButtonWithText("Edit");

        // restore the previous state of the course
        tester.setWorkingForm("editclass");
        tester.setTextField("title", "course");     // cleanup
        tester.clickButtonWithText("Edit Class");
    }
}
